class Solution(object):
    def uniquePaths(self, m, n):
        """
        :type m: int
        :type n: int
        :rtype: int
        """
        memo = {}
        def backtrack(x, y):
            if x == m - 1 and y == n - 1:
                return 1
            
            if x > m - 1 or y > n - 1:
                return 0
            
            if (x, y) in memo:
                return memo[(x, y)]

            memo[(x, y)] = backtrack(x + 1, y) + backtrack(x, y + 1)
            return memo[(x, y)]
        return backtrack(0, 0)
            
# TC - O(m * n)
# SC - O(m * n)
            
