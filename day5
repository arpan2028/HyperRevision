"""
Thoughts:
So once I chatted with an engineer of meta and he told be there are 2 parts to master Leetcode.
First, Building logic so that you remember it once you have glance of the problem. (You can easily implement the code in pseudocode/algo)
Second, Being good enough to implement the idea in code.
So, For me now i have somewhat idea how to solve the problem and i struggle implementing it. I will find a way through it.


"""

#Valid Anagram
from collections import Counter
class Solution(object):
    def isAnagram(self, s, t):
        hmap = Counter(s)
        for char in t:
            if char not in hmap:
                return False
            hmap[char] -= 1
            if hmap[char] == 0:
                del hmap[char]
        return len(hmap) == 0
               


#Group Anagrams
from collections import defaultdict
class Solution:
    def groupAnagrams(self, strs):
        res = defaultdict(list)

        for s in strs:
            count = [0] * 26
            for c in s:
                count[ord(c) - ord('a')] += 1
            res[tuple(count)].append(s)
        return res.values()
 
