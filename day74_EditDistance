from collections import Counter
class Solution(object):
    def minDistance(self, word1, word2):
        """
        :type word1: str
        :type word2: str
        :rtype: int
        """
        m, n = len(word1), len(word2)
        memo = {}

        def dp(i, j):
            if i == m:
                return n - j

            if j == n:
                return m - i

            if (i, j) in memo:
                return memo[(i, j)]

            if word1[i] == word2[j]:
                memo[(i, j)] = dp(i + 1, j + 1)
            else:
                res = min(dp(i + 1, j), dp(i, j + 1))
                res = min(res, dp(i + 1, j + 1))
                memo[(i, j)] = res + 1
            return memo[(i, j)]

        return dp(0, 0)

# TC - O(m * n)
# SC - O(m * n)
                
        
