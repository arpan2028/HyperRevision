#Two Pointers Method
class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        nums = numbers
        l, r = 0, len(nums) - 1
        for i in range(len(nums)):
            if nums[l] + nums[r] < target:
                l = l + 1
            elif nums[l] + nums[r] > target:
                r = r - 1
            else:
                return [l + 1, r + 1]
# TC - O(n)
# SC - O(1)


#Hashmap method
class Solution(object):
    def twoSum(self, numbers, target):
        """
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """
        seen = {}
        for i in range(len(numbers)):
            num = numbers[i]
            comp = target - num
            if comp in seen:
                return [seen[comp] + 1, i + 1]
            seen[num] = i
# TC - O(n)
# SC - O(n)
