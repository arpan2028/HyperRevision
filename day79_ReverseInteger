#Bit Manipulation like method
  class Solution:
    def reverse(self, n: int) -> int:
        MIN = -2147483648
        MAX = 2147483647

        res = 0
        while n:
            digit = int(math.fmod(n, 10))
            n = int(n/10)

            if (res > MAX // 10 or
                (res == MAX // 10 and digit >= MAX % 10)):
                return 0

            if (res < MIN // 10 or
                (res == MIN // 10 and digit <= MIN % 10)):
                return 0

            res = (res * 10) + digit
        return res
// TC = O(logn)
// SC = O(1)

#Arithmetic Reversal Method

class Solution(object):
    def reverse(self, x):
        """
        :type x: int
        :rtype: int
        """
        neg = 0
        if x < 0:
            neg = 1
            x = -x

        res = 0
        while x:
            res = (res * 10) + (x % 10)
            x = x // 10

        if res > 2**31 - 1 or res < -2**31:
            return 0

        return res if neg == 0 else -res
// TC - O(logn)
// SC - O(1)
    
            
