Trapping Rain Water

#prefix- suffix way
class Solution(object):
    def trap(self, height):
        n = len(height)
        if n < 3: return 0

        prefixMax = [0]*n
        suffixMax = [0]*n

        prefixMax[0] = height[0]
        for i in range(1, n):
            prefixMax[i] = max(prefixMax[i-1], height[i])

        suffixMax[n-1] = height[n-1]
        for i in range(n-2, -1, -1):
            suffixMax[i] = max(suffixMax[i+1], height[i])

        total = 0
        for i in range(1, n-1):            
            total += min(prefixMax[i], suffixMax[i]) - height[i]
        return total

# TC - O(n)
# SC - O(n)

#Slidding Window way
class Solution(object):
    def trap(self, height):
        n = len(height)
        left, right = 0, n - 1  
        lmax, rmax = height[left], height[right]
        total = 0
        while left < right:
            if height[left] <= height[right]:
                if height[left] < lmax:
                    total += lmax - height[left]
                else:
                    lmax = height[left]
                left += 1
            else:
                if height[right] < rmax:
                    total += rmax - height[right]
                else:
                    rmax = height[right]
                right -= 1
        return total                

# TC - O(n)
# SC - O(1) Extra space
        


        
