class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m,n = len(grid), len(grid[0])
        dp = [ [-1] * n for _ in range(m)]

        def pathsum(x, y):
            if x == m - 1 and y == n - 1:
                return grid[x][y]

            if x == m or y == n:
                return float('inf')
            
            if dp[x][y] != -1:
                return dp[x][y]

            dp[x][y] = grid[x][y] + min(pathsum(x + 1, y), pathsum(x, y + 1))
            return dp[x][y]

        return pathsum(0, 0)

# TC - O(m * n)
# SC - O(m * n)
